import"../../web_modules/imba/dist/imba.js";export const ROUTES={};export class Location{static parse(Q,F){return Q instanceof Location?Q:new Location(Q,F)}constructor(Q,F){this.router=F,this.parse(Q)}parse(Q){return Q instanceof URL||(Q=new URL(Q,this.router.origin)),this.url=Q,this}search(){let Q=this.searchParams?this.searchParams.toString():"";return Q?"?"+Q:""}update(Q){if(Q instanceof Object)for(let F=0,U=Object.keys(Q),x=U.length,B,s;F<x;F++)B=U[F],s=Q[B],this.query(B,s);else typeof Q=="string"&&this.parse(Q);return this}query(Q,F){let U=this.searchParams;return F===void 0?U.get(Q):F==null||F==""?U.delete(Q):U.set(Q,F)}clone(){return new Location(this.url.href,this.router)}equals(Q){return this.toString()==String(Q)}get href(){return this.url.href}get path(){return this.url.href.slice(this.url.origin.length)}get pathname(){return this.url.pathname}toString(){return this.href}match(Q){let F=ROUTES[Q]||(ROUTES[Q]=new Route(null,Q));return F.test(this)}}
